server:
  port: 8080
  
http:
    end-point: /core-base  
    
management:
   endpoints:
      web:
         exposure:
            include: info, health , mappings , integrationgraph , caches , conditions , metrics

spring:
  activemq:
   broker-url: tcp://localhost:61616
  datasource:
    jdbcUrl: jdbc:postgresql://127.0.0.1:5434/musicbrainz
    url: jdbc:postgresql://127.0.0.1:5434/musicbrainz
    username: postgres 
    password: postgres123@   
  hikari:
    connectionTimeout: 20000
    maximumPoolSize: 100
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        ddl-auto: create-drop
        javax:
         cache:
            provider: org.ehcache.jsr107.EhcacheCachingProvider
        cache:
           use_second_level_cache: true
           use_query_cache: true
           region:
              factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
  ehcache:
      config: classpath:ehcache.xml                  
  properties:
    javax:
      persistence:
        sharedCache: 
            #required - enable selective caching mode - only entities with @Cacheable annotation will use L2 cache.
        mode: ENABLE_SELECTIVE         

entitymanager:
  packagesToScan: org.nanotek

config:
  fileLocation: /opt/mbdump
  fileName: artist
  immutable: org.nanotek.beans.csv.ArtistBean
  baseMap:
    artistId: 0
    gid: 1
    name: 2
    sortName: 3
    beginDateYear: 4
    beginDateMonth: 5
    beginDateDay: 6
    endDateYear: 7
    endDateMonth: 8
    endDateDay: 9
    typeId: 10
    areaId: 11
    genderId: 12 
    comment: 13
    editsPending: 14
    lastUpdated: 15
    ended: 16
    beginAreaId: 17
    endAreaId: 18
